####################################################################################################
#
# ULSPH example: water flow through a complex geometry read from a .STL file
#
# The boundary dump file (see below) can be converted into VTK format using the conversion
# tool dump2vtk_tris from the tools/smd directory.
#
# unit sytem: GPa / mm / ms
#
####################################################################################################


####################################################################################################
# MATERIAL PARAMETERS
####################################################################################################
variable 	rho equal 1.0 # initial mass density
variable        K equal 1
variable        contact_stiffness equal 1*${K}
variable        wall_temperature equal 100
variable        friction_coeff equal 0.5

####################################################################################################
# INITIALIZE LAMMPS
####################################################################################################
dimension       3
units		si
boundary        s s s # simulation box boundaries
atom_style      smd
atom_modify	map array
comm_modify     vel yes
comm_style      tiled
neigh_modify    every 10 delay 0 check yes exclude type 2 2
newton          off

####################################################################################################
# CREATE INITIAL GEOMETRY
####################################################################################################
variable 	l0 equal 1.0 # lattice spacing for creating particles
lattice 	sc ${l0}
region          box block -20 100 -20 100 0 20 units box
create_box 	2 box
region		particles block -5 45 -5 20 0 5 units box
create_atoms 	1 region particles
group           water type 1

####################################################################################################
# DISCRETIZATION PARAMETERS
####################################################################################################
variable 	vol_one equal ${l0}^3 # volume of one particle -- assuming unit thickness
variable 	skin equal 0.2*${l0} # Verlet list range
neighbor        ${skin} bin
variable        cr equal ${l0}/2
set             group all smd_contact_radius ${cr}
set 		group all volume ${vol_one}
set             group all smd_mass_density ${rho}
set 		group all diameter ${cr} # set SPH kernel radius
variable        mpm_cellsize equal ${l0}

####################################################################################################
# DEFINE GRAVITY BOUNDARY CONDITION
####################################################################################################
fix		gfix all gravity 0.0 vector 0.0 0.0 1
# create a group to hold the bottom layer of plate particles
region          bot block EDGE EDGE EDGE EDGE EDGE 0.51 units box
set             region bot mol 1000

####################################################################################################
# LOAD STL SURFACE
####################################################################################################
smd_create/tri_boundary scratcher.stl 2 65535
group           indentor type 2

####################################################################################################
# INTERACTION PHYSICS / MATERIAL MODEL
####################################################################################################
pair_style      hybrid/overlay smd/tri_surface 1.0 &
                smd/mpm_linear ${mpm_cellsize} FLIP 0.99 
pair_coeff      1 1 smd/mpm_linear
pair_coeff      2 2 none
pair_coeff      1 2 smd/tri_surface ${contact_stiffness} ${wall_temperature} ${friction_coeff}


####################################################################################################
# TIME INTEGRATION
####################################################################################################
fix             force_fix indentor setforce 0 0 0
fix             dtfix all smd/adjust_dt 0.5 # dynamically adjust time increment every step


####################################################################################################
# SPECIFY TRAJECTORY OUTPUT
####################################################################################################
variable        dumpFreq equal 1
compute         P water smd/plastic_strain
compute 	vol all smd/volume
compute         contact_radius all smd/contact_radius
compute         surface_coords indentor smd/triangle_vertices
compute         S water smd/ulsph_stress


dump 		dump_id all custom ${dumpFreq} dump.LAMMPS id type x y z vx vy vz &
			c_vol c_contact_radius proc c_P c_S[7]
dump_modify 	dump_id first yes

dump            surf_dump indentor custom ${dumpFreq} surface.LAMMPS id type mol x y z  &
                  c_surface_coords[1] c_surface_coords[2] c_surface_coords[3]          &
                  c_surface_coords[4] c_surface_coords[5] c_surface_coords[6]          &
                  c_surface_coords[7] c_surface_coords[8] c_surface_coords[9]
dump_modify 	surf_dump first yes

####################################################################################################
# STATUS OUTPUT
####################################################################################################
compute         eint all smd/internal_energy
compute         alleint all reduce sum c_eint
variable        etot equal pe+ke+c_alleint+f_gfix # total energy of the system
thermo 1
thermo_style custom step dt time pe ke v_etot

####################################################################################################
# RUN SIMULATION
####################################################################################################
run 0
balance          1.1 rcb
fix              balance_fix all balance 1000 1.1 rcb 
#velocity         water set 0 -1 0 units box

#timestep 0.4
# prescribe indentor velocity and run

# got to E origin at (10, 15)
fix             indentor_fix indentor smd/move_tri_surf *LINEAR 10 -5 0
smd_run_duration 1
run              999999999
# lower
fix             indentor_fix indentor smd/move_tri_surf *LINEAR 0 0 -1
smd_run_duration 1
run              999999999
# move x -10
fix             indentor_fix indentor smd/move_tri_surf *LINEAR -1 0 0
smd_run_duration 10
run              999999999
# move y -15
fix             indentor_fix indentor smd/move_tri_surf *LINEAR 0 -1 0
smd_run_duration 15
run              999999999
# move x +10
fix             indentor_fix indentor smd/move_tri_surf *LINEAR 1 0 0
smd_run_duration 10
run              999999999
# raise
fix             indentor_fix indentor smd/move_tri_surf *LINEAR 0 0 1
smd_run_duration 1
run              999999999
# got to E center at (0, 7.5)
fix             indentor_fix indentor smd/move_tri_surf *LINEAR -10 7.5 0
smd_run_duration 1
run              999999999
# lower
fix             indentor_fix indentor smd/move_tri_surf *LINEAR 0 0 -1
smd_run_duration 1
run              999999999
# move x +10
fix             indentor_fix indentor smd/move_tri_surf *LINEAR 1 0 0
smd_run_duration 10
run              999999999

run 0
#fix             indentor_fix indentor smd/move_tri_surf *LINEAR 0 0 -0.1
#smd_run_duration 10
#run             999999999
#fix             indentor_fix indentor smd/move_tri_surf *LINEAR 0.1 0 0
#run             2500
#fix             indentor_fix indentor smd/move_tri_surf *LINEAR 0 0 0.1
#run             150
