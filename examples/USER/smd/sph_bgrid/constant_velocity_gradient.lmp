# constant velocity gradient
# 

variable 	E equal 70.0 # Young's modulus
variable 	nu equal 0.45 # Poisson ratio
variable 	rho equal 1 # initial mass density
variable        q1 equal 0.56 # standard artificial viscosity linear coefficient
variable        q2 equal 0.0  # standard artificial viscosity quadratic coefficient
variable        hg equal 10.0 # hourglass control coefficient
variable        cp equal 1.0 # heat capacity of material -- not used here


variable        G equal 0*${E}/(2*(1+${nu}))
variable        K equal ${E}/(3*(1-2*${nu}))
variable        sigy equal 330.3
variable        c0 equal sqrt(${K}/${rho})


variable        l0 equal 0.25
# ----
variable        dt equal 0.125*${l0}/${c0} # CFL estimate for the stable timestep
print           "sound speed is ${c0}, CFL timestep is approximately ${dt}"
variable        skin equal 0.1 # Verlet list range

units		si
dimension       2
boundary        s s p
atom_style      smd
comm_style      brick
neighbor        ${skin} bin
neigh_modify    every 10 delay 0 check yes

newton          off

region          box block -5 5 -5 5 -0.1 0.1 units box
create_box      1 box

lattice         sq ${l0}
create_atoms    1 box
#displace_atoms  all random 0.1 0.0 0 220578 units box
variable        mpm_cellsize equal 1.0*${l0}

variable        vol_one equal ${l0}^2
set             group all volume ${vol_one}
set             group all smd_mass_density ${rho}
variable        h equal 2.4*${l0}
set             group all diameter ${h}
variable        cr equal ${l0}/2
set             group all smd_contact_radius ${cr}

#variable        comm_cutoff equal 8.0*${h}
comm_modify     vel yes #cutoff ${comm_cutoff}


# this is an updated-Lagrangian pair style with Tait EOS and physical viscosity.
pair_style      smd/mpm_linear ${mpm_cellsize}
#                           density speed_of_sound artif.visc.  heat.capacity hourglass
pair_coeff      1 1 *COMMON ${rho}  ${c0}          ${q1}  0             ${hg} &
		*EOS_LINEAR &
                *STRENGTH_LINEAR ${G} &
	        *END

compute         rho all smd/rho
compute         nn all smd/ulsph_num_neighs
compute         contact_radius all smd/contact_radius
compute         eint all smd/internal_energy
compute         alleint all reduce sum c_eint
compute         S all smd/ulsph_stress # stress tensor: xx, yy, zz, xy, xz, yz components
compute         D all smd/ulsph_strain_rate
variable        etot equal ke+c_alleint+pe
variable        amz equal angmom(all,z) # angular momentum


# time integration
timestep        ${dt} # set an initial estimate for the zero-th timestep
timestep        0
#fix             dtfix all smd/adjust_dt 0.5
#fix             gfix  all gravity 0.01 vector 0 1 0
fix             integration_fix all smd/integrate_mpm FLIP 0# actual integration for equations of motion

variable        dumpFreq equal 1
dump            dump_id all custom ${dumpFreq} dump.LAMMPS id type x y z &
                fx fy fz vx vy vz c_eint &
                c_contact_radius c_nn mol c_rho c_S[1] c_S[2] c_S[4] radius &
                c_D[1] c_D[2] c_D[4] 

dump_modify     dump_id first yes

thermo          10
thermo_style    custom step ke pe v_etot c_alleint dt v_amz

# Apply initial velocity conditions.
#
velocity        all ramp vx    5 -5 x -5 5 units box
velocity        all ramp vy    5 -5 y -5 5 units box
run  2
